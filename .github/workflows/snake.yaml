# name: Generate Snake Animation

# on:
#   push:
#     branches:
#       - main
#   schedule:
#     - cron: "0 0 * * *"


# permissions:
#   contents: write  # Allow write access to contents (useful for pushing changes)
#   actions: write 


# jobs:
#   generate:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Generate Snake Animation
#         uses: Platane/snk@v3
#         with:
#           github_user_name: ${{ github.repository_owner }}
#           outputs: |
#             dist/github-snake.svg?color_snake=#FF5733&color_dots=#FFD700,#FF6347,#FF4500,#8B0000,#FF1493
#             dist/github-snake-dark.svg?palette=github-dark&color_snake=#32CD32&color_dots=#00FF00,#228B22,#006400,#8B4513,#006400
#             dist/ocean.gif?color_snake=#FF5733&color_dots=#FFD700,#FF6347,#FF4500,#8B0000,#FF1493

#       - name: Debug Workspace
#         run: |
#           echo "Workspace contents:"
#           ls -la
#           echo "Contents of dist/:"
#           ls -la dist/

#       - name: Fix Permissions
#         run: |
#           sudo chown -R $USER:$USER dist/
#           sudo chmod -R 755 dist/

#       - name: Copy and Commit Snake Animations
#         run: |
#           mkdir -p output
#           cp dist/github-snake.svg output/github-contribution-grid-snake.svg
#           cp dist/github-snake-dark.svg output/github-contribution-grid-snake-dark.svg
#           cp dist/ocean.gif output/github-contribution-ocean.gif
#           git config --local user.email "abhigkumar709@gmail.com"
#           git config --local user.name "abhigyan-709"
#           git add output/
#           git commit -m "Updated GitHub contribution snake animations"
#           git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
#           git push


name: Generate Snake Animation

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight UTC

permissions:
  contents: write
  actions: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # fetch full history for proper rebase/merge

      - name: Generate Snake Animation
        uses: Platane/snk@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-snake.svg?color_snake=#FF5733&color_dots=#FFD700,#FF6347,#FF4500,#8B0000,#FF1493
            dist/github-snake-dark.svg?palette=github-dark&color_snake=#32CD32&color_dots=#00FF00,#228B22,#006400,#8B4513,#006400
            dist/ocean.gif?color_snake=#FF5733&color_dots=#FFD700,#FF6347,#FF4500,#8B0000,#FF1493

      - name: Debug Workspace
        run: |
          echo "Workspace contents:"
          ls -la
          echo "Contents of dist/:"
          ls -la dist/

      - name: Fix Permissions
        run: |
          sudo chown -R $USER:$USER dist/
          sudo chmod -R 755 dist/

      - name: Copy and Commit Snake Animations
        run: |
          mkdir -p output
          cp dist/github-snake.svg output/github-contribution-grid-snake.svg
          cp dist/github-snake-dark.svg output/github-contribution-grid-snake-dark.svg
          cp dist/ocean.gif output/github-contribution-ocean.gif

          git config --local user.email "abhigkumar709@gmail.com"
          git config --local user.name "abhigyan-709"

          # Make sure we're on the latest main
          git fetch origin main
          git checkout main
          git pull origin main

          # Stage changes
          git add output/

          # Commit only if there are changes
          if git diff --cached --quiet; then
            echo "âœ… No changes to commit"
          else
            git commit -m "chore: update GitHub contribution snake animations"
            git pull --rebase origin main   # replay commit on top of latest code
            git push origin main
          fi
